# Generated by Django 4.0.6 on 2024-01-24 08:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Employee', '0042_employedailyschedule_last_state_of_schedule_and_more'),
        ('Appointment', '0029_reversal_phone_number'),
        ('Finance', '0008_alter_refundcoupon_related_refund'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('Promotions', '0027_alter_coupon_usage_limit_alter_coupon_user_limit'),
        ('Service', '0003_servicegroup_image_servicegroup_is_image_uploaded_s3'),
        ('Product', '0003_productstock_refund_quantity'),
        ('Business', '0008_delete_refundsetting'),
        ('Client', '0002_client_client_tag_client_client_type'),
        ('Invoices', '0003_alter_saleinvoice_checkout_type'),
    ]

    operations = [
        migrations.CreateModel(
            name='SaleRecords',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('coupon_discounted_price', models.FloatField(null=True)),
                ('is_coupon_redeemed', models.TextField(null=True)),
                ('checkout_type', models.CharField(choices=[('appointment_checkout', 'Appointment Checkout'), ('sale_checkout', 'Sale Checkout')], max_length=50, null=True)),
                ('client_type', models.CharField(choices=[('Walk_in', 'Walk In'), ('In_Saloon', 'In Saloon')], default='', max_length=50)),
                ('total_discount', models.FloatField(blank=True, default=None, null=True)),
                ('voucher_redeem_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('redeem_option', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('is_promotion', models.BooleanField(default=False)),
                ('selected_promotion_id', models.CharField(default='', max_length=800)),
                ('status', models.CharField(choices=[('is_refund', 'Is Refund'), ('cancelled', 'Cancelled'), ('paid', 'Paid'), ('un_paid', 'Un Paid')], default='un_paid', max_length=50)),
                ('sub_total', models.FloatField(blank=True, default=0, null=True)),
                ('business_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_records_business_address', to='Business.businessaddress')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_records_client', to='Client.client')),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Promotions.coupon')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Employee.employee')),
                ('invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Invoices.saleinvoice')),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_records_member', to='Employee.employee')),
                ('refunds_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to='Finance.refund')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_records_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Sale Records',
            },
        ),
        migrations.CreateModel(
            name='SaleTax',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tax_name', models.CharField(default='', max_length=999)),
                ('tax_percentage', models.FloatField(blank=True, default=0, null=True)),
                ('business_tax_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Business.businesstax')),
                ('sale_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_tax_records', to='SaleRecords.salerecords')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SaleRecordTip',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tip_amount', models.FloatField(blank=True, default=0, null=True)),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_record_employee_tips', to='Employee.employee')),
                ('sale_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_tip_records', to='SaleRecords.salerecords')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SaleRecordsProducts',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('qty', models.PositiveIntegerField(default=0)),
                ('price', models.FloatField(blank=True, default=0, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Product.product')),
                ('sale_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_products_records', to='SaleRecords.salerecords')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SaleRecordServices',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('qty', models.PositiveIntegerField(default=0)),
                ('price', models.FloatField(blank=True, default=0, null=True)),
                ('sale_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_services_records', to='SaleRecords.salerecords')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Service.service')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SaleRecordsAppointmentServices',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('appointment_status', models.CharField(choices=[('void', 'Void'), ('booked', 'Booked'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='booked', max_length=50)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('qty', models.PositiveIntegerField(default=0)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('duration', models.PositiveIntegerField(default=0)),
                ('is_favourite', models.BooleanField(default=False)),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_appointment', to='Appointment.appointment')),
                ('sale_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointment_services', to='SaleRecords.salerecords')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Service.service')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SaleRecordAppliedCoupons',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('coupon_type', models.CharField(choices=[('refund', 'Refund Coupon'), ('specific_product_services', 'Specific Service/Product Coupon'), ('buy_one_get', 'Buy one Get one Free'), ('spend_some_amount', 'Spend Some Amount'), ('is_promotion', 'Promotion'), ('voucher', 'Voucher'), ('membership', 'Membership'), ('gift', 'Gift')], default='', max_length=50)),
                ('is_coupon_redeemed', models.BooleanField(blank=True, default=False, null=True)),
                ('sale_records', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_applied_coupons_records', to='SaleRecords.salerecords')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RedeemedItems',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('item_id', models.CharField(max_length=50)),
                ('redeemed_type', models.CharField(blank=True, max_length=50, null=True)),
                ('is_redeemed', models.BooleanField(blank=True, default=False, null=True)),
                ('sale_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_redeemed_items_records', to='SaleRecords.salerecords')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentMethods',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash Payment'), ('master', 'Master Payment'), ('visa', 'Visa Payment'), ('paypal', 'PayPal Payment'), ('gift', 'Gift Payment')], default='', max_length=50)),
                ('amount', models.FloatField(blank=True, default=0, null=True)),
                ('sale_records', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_payment_methods_records', to='SaleRecords.salerecords')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
