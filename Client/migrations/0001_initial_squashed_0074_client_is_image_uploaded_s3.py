# Generated by Django 4.0.6 on 2023-11-01 07:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    replaces = [('Client', '0001_initial'), ('Client', '0002_alter_client_mobile_number'), ('Client', '0003_auto_20220901_1225'), ('Client', '0004_auto_20220901_1433'), ('Client', '0005_clientgroup'), ('Client', '0006_alter_clientgroup_email'), ('Client', '0007_subscription'), ('Client', '0008_rewards'), ('Client', '0009_delete_rewards'), ('Client', '0010_rewards_promotion_membership'), ('Client', '0011_rewards_reward_type'), ('Client', '0012_auto_20220913_1512'), ('Client', '0013_auto_20220913_1549'), ('Client', '0014_vouchers'), ('Client', '0015_auto_20220915_1621'), ('Client', '0016_subscription_subscription_type'), ('Client', '0017_subscription_products_count'), ('Client', '0018_auto_20220922_1517'), ('Client', '0019_remove_promotion_duration_promotion_valid_til'), ('Client', '0020_auto_20220923_1739'), ('Client', '0021_auto_20220926_1508'), ('Client', '0022_auto_20220927_1500'), ('Client', '0023_alter_membership_membership'), ('Client', '0024_auto_20220928_0944'), ('Client', '0025_alter_subscription_select_amount'), ('Client', '0026_auto_20221026_1711'), ('Client', '0027_alter_vouchers_validity'), ('Client', '0028_alter_promotion_valid_til'), ('Client', '0029_auto_20221101_1728'), ('Client', '0030_auto_20221102_1603'), ('Client', '0031_auto_20221108_1727'), ('Client', '0032_auto_20221114_1155'), ('Client', '0033_loyaltypoints'), ('Client', '0034_auto_20221208_1042'), ('Client', '0035_alter_client_user'), ('Client', '0036_clientpromotions'), ('Client', '0037_clientpackagevalidation'), ('Client', '0038_auto_20230308_1130'), ('Client', '0039_currencypricemembership'), ('Client', '0040_auto_20230310_1056'), ('Client', '0041_remove_membership_color'), ('Client', '0042_alter_discountmembership_duration'), ('Client', '0043_alter_membership_discount'), ('Client', '0044_alter_membership_valid_for'), ('Client', '0045_remove_vouchers_value'), ('Client', '0046_alter_vouchers_validity'), ('Client', '0047_loyaltypoints_location'), ('Client', '0048_loyaltypointlogs'), ('Client', '0049_clientloyaltypoint'), ('Client', '0050_alter_clientloyaltypoint_location_and_more'), ('Client', '0051_clientloyaltypoint_customer_will_get_amount_and_more'), ('Client', '0052_rename_loyalty_points_loyaltypointlogs_balance_and_more'), ('Client', '0053_clientloyaltypoint_points_redeemed'), ('Client', '0054_vouchercurrencyprice'), ('Client', '0055_vouchers_discount_percentage'), ('Client', '0056_loyaltypointlogs_actual_sale_value_redeemed'), ('Client', '0057_alter_clientloyaltypoint_points_redeemed'), ('Client', '0058_alter_loyaltypointlogs_points_redeemed'), ('Client', '0059_alter_loyaltypoints_earn_points'), ('Client', '0060_alter_clientloyaltypoint_total_amount_and_more'), ('Client', '0061_alter_loyaltypointlogs_points_earned'), ('Client', '0062_alter_loyaltypointlogs_balance'), ('Client', '0063_client_is_default'), ('Client', '0064_loyaltypointlogs_invoice'), ('Client', '0065_loyaltypointlogs_checkout'), ('Client', '0066_alter_loyaltypoints_amount_spend'), ('Client', '0067_alter_clientloyaltypoint_customer_will_get_amount'), ('Client', '0068_alter_loyaltypoints_total_earn_from_points'), ('Client', '0069_alter_loyaltypoints_number_points'), ('Client', '0070_clientloyaltypoint_invoice'), ('Client', '0071_membership_arabic_name_vouchers_arabic_name'), ('Client', '0072_alter_currencypricemembership_price_and_more'), ('Client', '0073_alter_discountmembership_percentage_and_more'), ('Client', '0074_client_is_image_uploaded_s3')]

    dependencies = [
        ('Utility', '0007_language_code'),
        ('Promotions', '0024_complimentarydiscount_discountonfreeservice'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('Business', '0011_businesstheme_theme_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('full_name', models.CharField(default='', max_length=300)),
                ('image', models.ImageField(blank=True, null=True, upload_to='client/client_images/')),
                ('client_id', models.CharField(default='', max_length=50)),
                ('email', models.EmailField(default='', max_length=254)),
                ('mobile_number', models.CharField(blank=True, max_length=30, null=True)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('is_mobile_verified', models.BooleanField(default=False)),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], default='Male', max_length=20)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(default='')),
                ('card_number', models.CharField(blank=True, max_length=30, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_client', to='Business.business')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='city_clients', to='Utility.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='country_clients', to='Utility.country')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='state_clients', to='Utility.state')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client', to=settings.AUTH_USER_MODEL)),
                ('about_us', models.CharField(choices=[('Facebook', 'Facebook'), ('Instagram', 'Instagram'), ('Twitter', 'Twitter'), ('Whatsapp', 'Whatsapp'), ('Community', 'Community'), ('Media_Ads', 'Media Ads'), ('Friends', 'Friends')], default='Community', max_length=100)),
                ('customer_note', models.CharField(blank=True, max_length=255, null=True, verbose_name='Customer Note')),
                ('language', models.ForeignKey(blank=True, max_length=100, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='language_clients', to='Utility.language')),
                ('marketing', models.CharField(choices=[('opt_in', 'opt_in'), ('opt_out', 'opt_out')], default='opt_in', max_length=50)),
                ('is_default', models.BooleanField(default=False)),
                ('is_image_uploaded_s3', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ClientGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(blank=True, default='', max_length=254, null=True)),
                ('name', models.CharField(default='', max_length=300)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_client_group', to='Business.business')),
                ('client', models.ManyToManyField(related_name='group_clients', to='Client.client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_client_group', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(default='', max_length=300)),
                ('days', models.PositiveIntegerField(default=0, verbose_name='Number of Days')),
                ('select_amount', models.FloatField(default=0)),
                ('services_count', models.FloatField(default=0, verbose_name='Total Number of Services')),
                ('price', models.FloatField(default=0, verbose_name='Subscription Price')),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_subscriptions', to='Business.business')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_subscriptions', to='Product.product')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_subscriptions', to='Service.service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_subscriptions', to=settings.AUTH_USER_MODEL)),
                ('subscription_type', models.CharField(choices=[('Product', 'Product'), ('Service', 'Service')], default='Product', max_length=20)),
                ('products_count', models.FloatField(default=0, verbose_name='Total Number of Products')),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(default='', max_length=100)),
                ('valid_for', models.CharField(choices=[('7 Days', '7 Days'), ('14 Days', '14 Days'), ('1 Months', '1 Months'), ('2 Months', '2 Months'), ('3 Months', '3 Months'), ('4 Months', '4 Months'), ('6 Months', '6 Months'), ('8 Months', '8 Months'), ('1 Years', '1 Years'), ('18 Months', '18 Months'), ('2 Years', '2 Years'), ('5 Years', '5 Years')], default='7 Days', max_length=20, verbose_name='Validity for Days or Months')),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_memberships', to='Business.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_memberships', to=settings.AUTH_USER_MODEL)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
                ('discount', models.CharField(choices=[('Limited', 'Limited'), ('Free', 'Free')], default='Unlimited', max_length=20, verbose_name='Discount Limit')),
                ('percentage', models.FloatField(default=0)),
                ('term_condition', models.CharField(blank=True, max_length=300, null=True)),
                ('arabic_name', models.CharField(default='', max_length=999)),
            ],
        ),
        migrations.CreateModel(
            name='ClientPromotions',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('visits', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_client_promotions', to='Business.business')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_client_promotions', to='Client.client')),
                ('complimentary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complimentry_client_promotions', to='Promotions.complimentarydiscount')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_client_promotions', to='Service.service')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_client_promotions', to=settings.AUTH_USER_MODEL, verbose_name='Creator ( User )')),
            ],
        ),
        migrations.CreateModel(
            name='ClientPackageValidation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_client_packagevalidation', to='Business.business')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_client_packagevalidation', to='Client.client')),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='package_client_packagevalidation', to='Promotions.packagesdiscount')),
                ('service', models.ManyToManyField(related_name='service_client_packagevalidation', to='Service.service')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_client_packagevalidation', to=settings.AUTH_USER_MODEL, verbose_name='Creator ( User )')),
                ('due_date', models.DateField(null=True)),
                ('serviceduration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='serviceduration_client_packagevalidation', to='Promotions.servicedurationforspecifictime')),
            ],
        ),
        migrations.CreateModel(
            name='Vouchers',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(default='', max_length=100)),
                ('sales', models.FloatField(default=0)),
                ('price', models.FloatField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_voucher', to='Business.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_voucher', to=settings.AUTH_USER_MODEL, verbose_name='Creator ( User )')),
                ('voucher_type', models.CharField(choices=[('Product', 'Product'), ('Service', 'Service')], default='Product', max_length=20, verbose_name='Voucher Type')),
                ('validity', models.CharField(choices=[('7 Days', '7 Days'), ('14 Days', '14 Days'), ('1 Months', '1 Months'), ('2 Months', '2 Months'), ('3 Months', '3 Months'), ('4 Months', '4 Months'), ('6 Months', '6 Months'), ('8 Months', '8 Months'), ('1 Years', '1 Years'), ('18 Months', '18 Months'), ('2 Years', '2 Years'), ('5 Years', '5 Years')], default='7 Days', max_length=100, verbose_name='No of Days/Month')),
                ('discount_percentage', models.FloatField(blank=True, default=0, null=True)),
                ('arabic_name', models.CharField(default='', max_length=999)),
            ],
        ),
        migrations.CreateModel(
            name='LoyaltyPoints',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(default='', max_length=100)),
                ('loyaltytype', models.CharField(choices=[('Service', 'Service'), ('Retail', 'Retail'), ('Both', 'Both')], default='Service', max_length=50, verbose_name='Loyalty Type')),
                ('amount_spend', models.FloatField(blank=True, default=0, null=True)),
                ('number_points', models.FloatField(blank=True, default=0, null=True)),
                ('earn_points', models.FloatField(blank=True, default=0, null=True)),
                ('total_earn_from_points', models.FloatField(blank=True, default=0, null=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_loyalty', to='Business.business')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_loyalty', to=settings.AUTH_USER_MODEL, verbose_name='Creator ( User )')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location_loyaltypoints', to='Business.businessaddress')),
            ],
        ),
        migrations.CreateModel(
            name='ClientLoyaltyPoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('total_earn', models.FloatField(blank=True, default=0, null=True, verbose_name='Total Number Of Points')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_loyalty_points', to='Client.client')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_client_loyalty_points', to='Business.businessaddress')),
                ('loyalty_points', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loyalty_points_clients', to='Client.loyaltypoints')),
                ('customer_will_get_amount', models.FloatField(blank=True, default=0, null=True, verbose_name='a customer will get (this) amount')),
                ('for_every_points', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='For every (this) points')),
                ('total_amount', models.FloatField(blank=True, default=0, null=True, verbose_name='Number of Total Amount (Amount to Spend)')),
                ('points_redeemed', models.FloatField(default=0, verbose_name='Total Number Of Points Redeemed')),
                ('invoice', models.CharField(blank=True, max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LoyaltyPointLogs',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('balance', models.FloatField(blank=True, default=0, null=True)),
                ('points_earned', models.FloatField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_loyaltypointlogs', to='Client.client')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_loyaltypointlogs', to='Business.businessaddress')),
                ('client_points', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_points_logs', to='Client.clientloyaltypoint')),
                ('loyalty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='loyalty_points_logs', to='Client.loyaltypoints')),
                ('points_redeemed', models.FloatField(default=0)),
                ('actual_sale_value_redeemed', models.FloatField(default=0)),
                ('invoice', models.CharField(blank=True, max_length=128, null=True)),
                ('checkout', models.CharField(blank=True, max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CurrencyPriceMembership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('price', models.FloatField(default=0)),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Utility.currency')),
                ('membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membership_currenypricemembership', to='Client.membership')),
            ],
        ),
        migrations.CreateModel(
            name='VoucherCurrencyPrice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('price', models.FloatField(default=0)),
                ('is_deleted', models.BooleanField(default=False)),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Utility.currency')),
                ('voucher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='voucher_vouchercurrencyprice', to='Client.vouchers')),
            ],
        ),
        migrations.CreateModel(
            name='DiscountMembership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('duration', models.CharField(blank=True, choices=[('7 Days', '7 Days'), ('14 Days', '14 Days'), ('1 Month', '1 Month')], default='7 Days', max_length=50, null=True, verbose_name='Duration')),
                ('percentage', models.FloatField(default=0)),
                ('membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membership_discountmembership', to='Client.membership')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_memberships', to='Product.product')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_memberships', to='Service.service')),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('promotion_type', models.CharField(choices=[('Product', 'Product'), ('Service', 'Service')], default='Service', max_length=20)),
                ('discount', models.FloatField(default=0)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_promotions', to='Business.business')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_promotions', to='Product.product')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_promotions', to='Service.service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_promotions', to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(default='', max_length=100, verbose_name='Promotion Name')),
                ('purchases', models.FloatField(blank=True, default=0, null=True, verbose_name='No. of Purchases')),
                ('valid_til', models.CharField(blank=True, choices=[('7 Days', '7 Days'), ('14 Days', '14 Days'), ('1 Month', '1 Months'), ('2 Months', '2 Months'), ('3 Months', '3 Months'), ('4 Months', '4 Months'), ('6 Months', '6 Months'), ('8 Months', '8 Months'), ('1 Years', '1 Years'), ('18 Months', '18 Months'), ('2 Years', '2 Years'), ('5 Years', '5 Years')], default='7 Days', max_length=100, null=True, verbose_name='No of Days/Month')),
            ],
        ),
        migrations.CreateModel(
            name='Rewards',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(default='', max_length=100)),
                ('reward_value', models.FloatField(default=0)),
                ('reward_point', models.FloatField(default=0)),
                ('total_points', models.FloatField(default=0)),
                ('discount', models.FloatField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_reward', to='Business.business')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_rewards', to='Product.product')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_rewards', to='Service.service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_reward', to=settings.AUTH_USER_MODEL, verbose_name='Creator ( User )')),
                ('reward_type', models.CharField(choices=[('Product', 'Product'), ('Service', 'Service')], default='Product', max_length=20)),
            ],
        ),
    ]
