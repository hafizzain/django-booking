# Generated by Django 4.0.6 on 2022-08-13 08:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('Business', '0005_businesstheme'),
    ]

    operations = [
        migrations.CreateModel(
            name='StockNotificationSetting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('notify_for_lowest_stock', models.BooleanField(default=True, verbose_name='Alert when stock becomes the lowest')),
                ('notify_stock_turnover', models.BooleanField(default=True, verbose_name='Alert on highest/lowest turnover')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_stock_notify_setting', to='Business.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_stock_notify_setting', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StaffNotificationSetting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('sms_daily_sale', models.BooleanField(default=True, verbose_name='Send SMS Notification on Daily Sale')),
                ('email_daily_sale', models.BooleanField(default=True, verbose_name='Send Email Notification on Daily Sale')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_staff_notify_setting', to='Business.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_staff_notify_setting', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ClientNotificationSetting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('sms_purchase_plan', models.BooleanField(default=True, verbose_name='Send SMS Notification on Purchase Plan')),
                ('sms_for_rewards_on_quick_sale', models.BooleanField(default=True, verbose_name='Send SMS Notification for Rewards on quick Sale')),
                ('sms_pending_services_quicksale', models.BooleanField(default=True, verbose_name='Send SMS Notification on Pending Services Quick Sale')),
                ('sms_for_ewallet_balance_on_quick_sale', models.BooleanField(default=True, verbose_name='Send SMS Notification for ewallet balance on quick sale')),
                ('sms_pending_payment', models.BooleanField(default=True, verbose_name='Send SMS Notification on Pending Payment')),
                ('email_notify_on_purchase_plan', models.BooleanField(default=True, verbose_name='Send Email Notification On Purchase Plan')),
                ('sms_quick_sale', models.BooleanField(default=True, verbose_name='Send SMS Notification on Quick Sale')),
                ('sms_appoinment', models.BooleanField(default=True, verbose_name='Send Notification on Appoinment')),
                ('sms_appoinment_reschedule', models.BooleanField(default=True, verbose_name='Send SMS Notification on Appoinment reschedule')),
                ('sms_birthday', models.BooleanField(default=True, verbose_name='Send SMS Notification on Birthday')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_client_notify_setting', to='Business.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_client_notify_setting', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AdminNotificationSetting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('sms_notify_on_appoinment', models.BooleanField(default=True, verbose_name='Send SMS Notification on Apoinment')),
                ('sms_notify_on_quick_sale', models.BooleanField(default=True, verbose_name='Send SMS Notification on quick sale')),
                ('sms_notify_for_daily_book', models.BooleanField(default=True, verbose_name='Send SMS Notification for daily book')),
                ('email_notify_on_appoinment', models.BooleanField(default=True, verbose_name='Send Email Notification on Appoinment')),
                ('email_notify_on_quick_sale', models.BooleanField(default=True, verbose_name='Send Email Notification on Quick Sale')),
                ('email_notify_on_daily_book', models.BooleanField(default=True, verbose_name='Send Email Notification on Daily Book')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_admin_notify_setting', to='Business.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_admin_notify_setting', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
