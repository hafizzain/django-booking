# Generated by Django 4.0.6 on 2023-11-01 07:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    replaces = [('Business', '0001_initial'), ('Business', '0002_businessaddress_businessopeninghour_businesssocial_and_more'), ('Business', '0003_alter_business_week_start'), ('Business', '0004_businessaddress_address_name'), ('Business', '0005_businesstheme'), ('Business', '0006_stocknotificationsetting_staffnotificationsetting_and_more'), ('Business', '0007_bookingsetting'), ('Business', '0008_businesstax_businesspaymentmethod'), ('Business', '0009_businessvendor'), ('Business', '0010_alter_businesstax_parent_tax'), ('Business', '0011_businesstheme_theme_name'), ('Business', '0012_alter_businessvendor_mobile_number'), ('Business', '0013_auto_20220901_1433'), ('Business', '0014_alter_businessaddress_postal_code'), ('Business', '0015_auto_20220905_1059'), ('Business', '0016_alter_businessopeninghour_close_time_and_more'), ('Business', '0017_alter_adminnotificationsetting_sms_notify_for_daily_book_and_more'), ('Business', '0018_businesstype_image_path'), ('Business', '0019_auto_20220928_1009'), ('Business', '0020_businesstype_slug'), ('Business', '0021_businessaddress_banking'), ('Business', '0022_business_is_completed'), ('Business', '0023_businessaddress_currency'), ('Business', '0024_auto_20221220_1150'), ('Business', '0025_businessaddress_is_publish'), ('Business', '0026_alter_businessaddress_service_avaiable'), ('Business', '0027_alter_businessaddressmedia_image'), ('Business', '0028_businessaddress_description'), ('Business', '0029_businessaddress_is_default'), ('Business', '0030_alter_businesstax_tax_rate'), ('Business', '0031_businesstaxsetting'), ('Business', '0032_business_is_banner_uploaded_s3_and_more'), ('Business', '0033_alter_businessaddress_service_avaiable'), ('Business', '0034_businessaddress_primary_translation'), ('Business', '0035_businessaddress_secondary_translation_and_more'), ('Business', '0036_alter_businessaddress_primary_translation_and_more'), ('Business', '0037_businessprivacy_businesspolicy'), ('Business', '0038_alter_businessvendor_email')]

    dependencies = [
        ('Profile', '0002_userlanguage'),
        ('Utility', '0002_currency'),
        ('Utility', '0007_language_code'),
        ('MultiLanguage', '0006_translationlabels'),
        ('Utility', '0012_auto_20221015_1633'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(default='', max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='business/business_types/images/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image_path', models.CharField(blank=True, default='', max_length=2000, null=True)),
                ('slug', models.CharField(default='', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('business_name', models.CharField(default='', max_length=300)),
                ('logo', models.ImageField(upload_to='business/logo/')),
                ('banner', models.ImageField(upload_to='business/banner/')),
                ('postal_code', models.CharField(default='', max_length=30)),
                ('team_size', models.CharField(default='', max_length=100)),
                ('timezone', models.CharField(default='', max_length=200)),
                ('how_find_us', models.CharField(default='', max_length=500)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business_types', models.ManyToManyField(related_name='type_businesses', to='Business.businesstype')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Utility.currency')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_business', to='Profile.profile')),
                ('software_used', models.ManyToManyField(related_name='software_businesses', to='Utility.software')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_business', to=settings.AUTH_USER_MODEL)),
                ('time_format', models.CharField(default='', max_length=300)),
                ('week_start', models.CharField(default='Monday', max_length=20)),
                ('is_completed', models.BooleanField(default=False, verbose_name='Business setting completed')),
                ('is_banner_uploaded_s3', models.BooleanField(default=False)),
                ('is_logo_uploaded_s3', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessSocial',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('website', models.TextField()),
                ('facebook', models.TextField()),
                ('instagram', models.TextField()),
                ('whatsapp', models.TextField()),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_socials', to='Business.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_socials', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessAddress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('address', models.TextField(default='')),
                ('latitude', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('longitude', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('postal_code', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('gstin', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('website', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('mobile_number', models.CharField(default='', max_length=30)),
                ('is_mobile_verified', models.BooleanField(default=False)),
                ('is_primary', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_closed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_address', to='Business.business')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='address_city', to='Utility.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='address_country', to='Utility.country')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='address_state', to='Utility.state')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_address', to=settings.AUTH_USER_MODEL)),
                ('address_name', models.CharField(default='', max_length=500)),
                ('banking', models.CharField(choices=[('Enable', 'Enable'), ('Disable', 'Disable')], default='Disable', max_length=50)),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='address_currency', to='Utility.currency')),
                ('location_name', models.CharField(default='', max_length=500)),
                ('service_avaiable', models.CharField(choices=[('Everyone', 'Everyone'), ('Male', 'Male'), ('Female', 'Female')], default='Everyone', max_length=100)),
                ('is_publish', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('primary_translation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary', to='MultiLanguage.invoicetranslation')),
                ('secondary_translation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='secondary', to='MultiLanguage.invoicetranslation')),
            ],
        ),
        migrations.CreateModel(
            name='StockNotificationSetting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('notify_for_lowest_stock', models.BooleanField(default=True, verbose_name='Alert when stock becomes the lowest')),
                ('notify_stock_turnover', models.BooleanField(default=True, verbose_name='Alert on highest/lowest turnover')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_stock_notify_setting', to='Business.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_stock_notify_setting', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BookingSetting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('cancel_or_reschedule', models.CharField(choices=[('Anytime', 'Anytime'), ('12_Hours_Prior_To_The_Appoinment', '12 Hours Prior To The Appoinment'), ('24_Hours_Prior_To_The_Appoinment', '24 Hours Prior To The Appoinment'), ('36_Hours_Prior_To_The_Appoinment', '36 Hours Prior To The Appoinment')], default='Anytime', max_length=100)),
                ('client_can_book', models.CharField(choices=[('Anytime', 'Anytime'), ('5_Hours_Before', '5 Hours Before'), ('12_Hours_Before', '12 Hours Before'), ('24_Hours_Before', '24 Hours Before'), ('36_Hours_Before', '36 Hours Before')], default='Anytime', max_length=100)),
                ('controls_time_slot', models.CharField(choices=[('Anytime_In_The_Future', 'Anytime In The Future'), ('No_More_Than_1_Months_In_The_Future', 'No More Than 1 Months In The Future'), ('No_More_Than_2_Months_In_The_Future', 'No More Than 2 Months In The Future'), ('No_More_Than_3_Months_In_The_Future', 'No More Than 3 Months In The Future')], default='Anytime_In_The_Future', max_length=100)),
                ('time_slots_interval', models.CharField(choices=[('15_Mins', '15 Mins'), ('30_Mins', '30 Mins'), ('45_Mins', '45 Mins'), ('60_Mins', '60 Mins'), ('120_Mins', '120 Mins')], default='15_Mins', max_length=50)),
                ('allow_client_to_select_team_member', models.BooleanField(default=True)),
                ('send_to_client', models.BooleanField(default=False)),
                ('send_to_specific_email_address', models.BooleanField(default=False)),
                ('auto_confirmation', models.BooleanField(default=False)),
                ('admin_confirmation', models.BooleanField(default=False)),
                ('start_time', models.BooleanField(default=True)),
                ('services', models.BooleanField(default=True)),
                ('duration', models.BooleanField(default=False)),
                ('choose_team_member', models.BooleanField(default=True)),
                ('select_payment_type', models.BooleanField(default=False)),
                ('initial_deposit', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_booking_setting', to='Business.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_booking_setting', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessPaymentMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('method_type', models.CharField(choices=[('Cash', 'Cash'), ('Mastercard', 'Mastercard'), ('Visa', 'Visa'), ('Paypal', 'Paypal'), ('GooglePay', 'Google Pay'), ('ApplePay', 'Apple Pay')], default='Cash', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_available_payment_methods', to='Business.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_available_payment_methods', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessTheme',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('primary_color', models.CharField(default='', max_length=20)),
                ('secondary_color', models.CharField(default='', max_length=20)),
                ('menu_option', models.CharField(default='', max_length=300, null=True)),
                ('calendar_option', models.CharField(choices=[('HorizontalView', 'Horizontal View'), ('VerticalView', 'Vertical View')], default='HorizontalView', max_length=50)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_theme', to='Business.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_theme', to=settings.AUTH_USER_MODEL)),
                ('theme_name', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AdminNotificationSetting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('sms_notify_on_appoinment', models.BooleanField(default=False, verbose_name='Send SMS Notification on Apoinment')),
                ('sms_notify_on_quick_sale', models.BooleanField(default=False, verbose_name='Send SMS Notification on quick sale')),
                ('sms_notify_for_daily_book', models.BooleanField(default=False, verbose_name='Send SMS Notification for daily book')),
                ('email_notify_on_appoinment', models.BooleanField(default=True, verbose_name='Send Email Notification on Appoinment')),
                ('email_notify_on_quick_sale', models.BooleanField(default=True, verbose_name='Send Email Notification on Quick Sale')),
                ('email_notify_on_daily_book', models.BooleanField(default=False, verbose_name='Send Email Notification on Daily Book')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_admin_notify_setting', to='Business.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_admin_notify_setting', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ClientNotificationSetting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('sms_purchase_plan', models.BooleanField(default=False, verbose_name='Send SMS Notification on Purchase Plan')),
                ('sms_for_rewards_on_quick_sale', models.BooleanField(default=False, verbose_name='Send SMS Notification for Rewards on quick Sale')),
                ('sms_pending_services_quicksale', models.BooleanField(default=False, verbose_name='Send SMS Notification on Pending Services Quick Sale')),
                ('sms_for_ewallet_balance_on_quick_sale', models.BooleanField(default=False, verbose_name='Send SMS Notification for ewallet balance on quick sale')),
                ('sms_pending_payment', models.BooleanField(default=False, verbose_name='Send SMS Notification on Pending Payment')),
                ('email_notify_on_purchase_plan', models.BooleanField(default=True, verbose_name='Send Email Notification On Purchase Plan')),
                ('sms_quick_sale', models.BooleanField(default=True, verbose_name='Send SMS Notification on Quick Sale')),
                ('sms_appoinment', models.BooleanField(default=True, verbose_name='Send Notification on Appoinment')),
                ('sms_appoinment_reschedule', models.BooleanField(default=False, verbose_name='Send SMS Notification on Appoinment reschedule')),
                ('sms_birthday', models.BooleanField(default=False, verbose_name='Send SMS Notification on Birthday')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_client_notify_setting', to='Business.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_client_notify_setting', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StaffNotificationSetting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('sms_daily_sale', models.BooleanField(default=False, verbose_name='Send SMS Notification on Daily Sale')),
                ('email_daily_sale', models.BooleanField(default=True, verbose_name='Send Email Notification on Daily Sale')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_staff_notify_setting', to='Business.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_staff_notify_setting', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessOpeningHour',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('day', models.CharField(default='', max_length=20)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('close_time', models.TimeField(blank=True, null=True)),
                ('is_closed', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_hours', to='Business.business')),
                ('business_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_address_hours', to='Business.businessaddress')),
            ],
            options={
                'unique_together': {('business', 'business_address', 'day')},
            },
        ),
        migrations.CreateModel(
            name='BusinessTax',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('tax_type', models.CharField(choices=[('Individual', 'Individual'), ('Group', 'Group'), ('Location', 'Location')], default='Individual', max_length=20)),
                ('name', models.CharField(default='', max_length=100)),
                ('tax_rate', models.FloatField(blank=True, default=0, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_tax', to='Business.business')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locations_taxs', to='Business.businessaddress')),
                ('parent_tax', models.ManyToManyField(blank=True, to='Business.businesstax')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_tax', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessTaxSetting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('tax_setting', models.CharField(choices=[('Combined', 'Combined'), ('Seperately', 'Seperately')], default='Combined', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_tax_setting', to='Business.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_tax_setting', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessAddressMedia',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='business/address_media/')),
                ('is_cover', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_businessaddress_media', to='Business.business')),
                ('business_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_address_businessaddress_media', to='Business.businessaddress')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_businessaddress_media', to=settings.AUTH_USER_MODEL)),
                ('is_image_uploaded_s3', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessPrivacy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_privacies', to='Business.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_privacies', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_policies', to='Business.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_policies', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessVendor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('vendor_name', models.CharField(default='', max_length=500)),
                ('address', models.TextField(default='')),
                ('latitude', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('longitude', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('postal_code', models.CharField(default='', max_length=30)),
                ('gstin', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('website', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_email_verified', models.BooleanField(blank=True, default=False, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=30, null=True)),
                ('is_mobile_verified', models.BooleanField(default=False)),
                ('is_primary', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_closed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='business_vendors', to='Business.business')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='city_vendors', to='Utility.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='country_vendors', to='Utility.country')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='state_vendors', to='Utility.state')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_vendors', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
